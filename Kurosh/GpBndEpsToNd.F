      subroutine GpBndEpsToNd(GpEps,NdEps)
c --- primary function: Extrapolates strains from some points in the bond to corner points
c
c Input arguments:
c  GpEps     (dp,arr(8),in)            - Strain at Gauss points
        
c output arguments:
c  NdEps     (dp,arr(8),out)          - Strain at corner points
c
#include "impcom.inc"
c

      
      double precision    GpEps(8,2) ,NdEps(8,2)
      double precision    N(8,8)
            
      N(1,1) =  2.549038105676658 
      N(1,2) = -0.683012701892219 
      N(1,3) =  0.183012701892219 
      N(1,4) = -0.683012701892219 
      N(1,5) = -0.683012701892219 
      N(1,6) =  0.183012701892219 
      N(1,7) = -0.049038105676658 
      N(1,8) =  0.183012701892219 
      N(2,1) = -0.683012701892219 
      N(2,2) =  2.549038105676657 
      N(2,3) = -0.683012701892219 
      N(2,4) =  0.183012701892219 
      N(2,5) =  0.183012701892219 
      N(2,6) = -0.683012701892219 
      N(2,7) =  0.183012701892219 
      N(2,8) = -0.049038105676658 
      N(3,1) =  0.183012701892219 
      N(3,2) = -0.683012701892219 
      N(3,3) =  2.549038105676657 
      N(3,4) = -0.683012701892219 
      N(3,5) = -0.049038105676658 
      N(3,6) =  0.183012701892219 
      N(3,7) = -0.683012701892219 
      N(3,8) =  0.183012701892219 
      N(4,1) = -0.683012701892219 
      N(4,2) =  0.183012701892219 
      N(4,3) = -0.683012701892219 
      N(4,4) =  2.549038105676657 
      N(4,5) =  0.183012701892219 
      N(4,6) = -0.049038105676658 
      N(4,7) =  0.183012701892219 
      N(4,8) = -0.683012701892219 
      N(5,1) = -0.683012701892219 
      N(5,2) =  0.183012701892219 
      N(5,3) = -0.049038105676658 
      N(5,4) =  0.183012701892219 
      N(5,5) =  2.549038105676658 
      N(5,6) = -0.683012701892219 
      N(5,7) =  0.183012701892219 
      N(5,8) = -0.683012701892219 
      N(6,1) =  0.183012701892219 
      N(6,2) = -0.683012701892219 
      N(6,3) =  0.183012701892219 
      N(6,4) = -0.049038105676658 
      N(6,5) = -0.683012701892219 
      N(6,6) =  2.549038105676657 
      N(6,7) = -0.683012701892219 
      N(6,8) =  0.183012701892219 
      N(7,1) = -0.049038105676658 
      N(7,2) =  0.183012701892219 
      N(7,3) = -0.683012701892219 
      N(7,4) =  0.183012701892219 
      N(7,5) =  0.183012701892219 
      N(7,6) = -0.683012701892219 
      N(7,7) =  2.549038105676657 
      N(7,8) = -0.683012701892219 
      N(8,1) =  0.183012701892219 
      N(8,2) = -0.049038105676658 
      N(8,3) =  0.183012701892219 
      N(8,4) = -0.683012701892219 
      N(8,5) = -0.683012701892219 
      N(8,6) =  0.183012701892219 
      N(8,7) = -0.683012701892219 
      N(8,8) =  2.549038105676657 
 

      call AxB_C(N,GpEps,NdEps,8,8,8,8,2,8)
c       NdEps = MATMUL(N,GpEps)
      
            
999   return
      end      